using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Basic_Stack_Operations
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] commands = Console.ReadLine().Split().Select(int.Parse).ToArray();
            int[] numbers = Console.ReadLine().Split().Select(int.Parse).ToArray();

            int n = commands[0];
            int s = commands[1];
            int x = commands[2];

            Stack<int> stack = new Stack<int>();

            PushElements(stack, numbers, n);
            PopElements(stack, s);
            Checks(stack, x);

            // for (int i = 0; i < n; i++)
            // {
            //     stack.Push(numbers[i]);
            // }

            // for (int i = 0; i < s; i++)
            // {
            //     stack.Pop();
            // }

            // if (stack.Any())
            // {
            //     if (stack.Contains(x))
            //     {
            //         Console.WriteLine("true");
            //     }
            //     else
            //     {
            //         Console.WriteLine(stack.Min());
            //     }
            // }
            // 
            // else
            // {
            //     Console.WriteLine(0);
            // }
        }

        static Stack<int> PushElements(Stack<int> stack, int[] numbers, int comand)
        {
            for (int i = 0; i < comand; i++)
            {
                stack.Push(numbers[i]);
            }
            return stack;
        }

        static Stack<int> PopElements(Stack<int> stack, int comand)
        {
            for (int i = 0; i < comand; i++)
            {
                stack.Pop();
            }
            return stack;
        }

        static void Checks(Stack<int> stack, int comand)
        {

            if (stack.Any())
            {
                if (stack.Contains(comand))
                {
                    Console.WriteLine("true");
                }
                else
                {
                    Console.WriteLine(stack.Min());
                }
            }

            else
            {
                Console.WriteLine(0);
            }
        }
    }
}